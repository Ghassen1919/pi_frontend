{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let UserAuthService = /*#__PURE__*/(() => {\n  class UserAuthService {\n    constructor() {}\n\n    setRoles(roles) {\n      localStorage.setItem('roles', JSON.stringify(roles));\n    }\n\n    getRoles() {\n      var _a;\n\n      const rolesString = (_a = localStorage.getItem('roles')) !== null && _a !== void 0 ? _a : '[]';\n      return JSON.parse(rolesString);\n    }\n\n    setToken(jwtToken) {\n      localStorage.setItem('jwtToken', jwtToken);\n    }\n\n    getToken() {\n      try {\n        const token = localStorage.getItem('jwtToken');\n\n        if (token) {\n          return token;\n        } else {\n          throw new Error('JWT token not found in localStorage.');\n        }\n      } catch (error) {\n        // You can log the error or handle it in some other way (e.g., returning a default value)\n        console.error('Error getting JWT token:', error);\n        return null;\n      }\n    }\n\n    clear() {\n      localStorage.clear();\n    }\n\n    isLoggedIn() {\n      return this.getRoles() && this.getToken();\n    }\n\n    setUser(user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } // Method to retrieve user data from local storage\n\n\n    getUser() {\n      const userString = localStorage.getItem('user');\n      return userString ? JSON.parse(userString) : null;\n    }\n\n  }\n\n  UserAuthService.ɵfac = function UserAuthService_Factory(t) {\n    return new (t || UserAuthService)();\n  };\n\n  UserAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAuthService,\n    factory: UserAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}