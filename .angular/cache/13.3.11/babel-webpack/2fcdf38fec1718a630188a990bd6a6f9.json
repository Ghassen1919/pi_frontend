{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user-auth.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpclient, userAuthService) {\n      this.httpclient = httpclient;\n      this.userAuthService = userAuthService;\n      this.PATH_OF_API = 'http://localhost:8085';\n      this.baseUrl = 'http://localhost:8085';\n      this.requestHeader = new HttpHeaders({\n        'No-Auth': 'True'\n      });\n    }\n\n    setUserData(data) {\n      this.currentUser = data;\n    }\n\n    getUserData() {\n      return this.currentUser;\n    }\n\n    login(loginData) {\n      return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\n        headers: this.requestHeader\n      });\n    }\n\n    roleMatch(allowedRoles) {\n      const userRoles = this.userAuthService.getRoles();\n\n      if (userRoles != null && userRoles) {\n        for (let i = 0; i < userRoles.length; i++) {\n          for (let j = 0; j < allowedRoles.length; j++) {\n            if (userRoles[i].roleName === allowedRoles[j]) {\n              return true; // Return true if a match is found.\n            }\n          }\n        }\n      }\n\n      return false; // Return false if no match is found.\n    }\n\n    getusers() {\n      return this.httpclient.get(\"http://localhost:8085/afficher\");\n    }\n\n    getCurrentUser() {\n      return this.httpclient.get(this.PATH_OF_API + '/getcurrentuser');\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserAuthService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}