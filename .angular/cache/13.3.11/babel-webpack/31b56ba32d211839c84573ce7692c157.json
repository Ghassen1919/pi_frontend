{"ast":null,"code":"import { Chart, ArcElement, PieController } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/claim.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\n\nfunction DashboardComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const label_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", label_r3, \": \", ctx_r2.pieChart1.data.datasets[0].data[i_r4] * 100, \"% \");\n  }\n}\n\nfunction DashboardComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, DashboardComponent_div_19_div_1_Template, 2, 2, \"div\", 18);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pieChart1.data.labels);\n  }\n}\n\nfunction DashboardComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const label_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", label_r6, \": \", ctx_r5.pieChart.data.datasets[0].data[i_r7] * 100, \"% \");\n  }\n}\n\nfunction DashboardComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, DashboardComponent_div_28_div_1_Template, 2, 2, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.pieChart.data.labels);\n  }\n}\n\nChart.register(PieController);\nChart.register(ArcElement);\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(claimService, http) {\n      this.claimService = claimService;\n      this.http = http;\n      this.data = [];\n      this.data2 = [];\n      this.chartSeries = [40, 32, 28, 55];\n      this.chartDetails = {\n        type: 'pie',\n        toolbar: {\n          show: true\n        }\n      };\n      this.chartLabels = [\"Apple\", \"Microsoft\", \"Facebook\", \"Google\"];\n      this.chartTitle = {\n        text: 'Leading Companies',\n        align: 'center'\n      };\n      this.chartDataLabels = {\n        enabled: true\n      };\n    }\n\n    ngOnInit() {\n      this.getPourcentage();\n      this.getPourcentage1();\n      this.http.get('http://localhost:8085/claim/nbclaim').subscribe(data2 => {\n        this.nbClaims = data2;\n      }, error => {\n        console.log('Error occurred while fetching nbClaims: ', error);\n      });\n    }\n\n    getPourcentage() {\n      this.http.get('http://localhost:8085/claim/nbclaim3').subscribe(data => {\n        const labels = Object.keys(data);\n        const percentages = Object.values(data);\n        const colors = this.generateColors(labels.length);\n        this.pieChart = new Chart('pieChart', {\n          type: 'pie',\n          data: {\n            labels: labels,\n            datasets: [{\n              data: percentages,\n              backgroundColor: colors\n            }]\n          },\n          options: {\n            title: {\n              display: true,\n              text: 'Claim Types Distribution'\n            },\n            tooltips: {\n              callbacks: {\n                label: function (context) {\n                  const label = context.label;\n                  const value = context.formattedValue;\n                  return `${label}: ${value}%`;\n                }\n              }\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          }\n        });\n      });\n    }\n\n    generateColors(numColors) {\n      const colors = [];\n\n      for (let i = 0; i < numColors; i++) {\n        colors.push(`#${Math.floor(Math.random() * 16777215).toString(16)}`);\n      }\n\n      return colors;\n    }\n\n    getPourcentage1() {\n      this.http.get('http://localhost:8085/claim/nbclaim1').subscribe(data1 => {\n        const labels = Object.keys(data1);\n        const percentages = Object.values(data1);\n        const colors = [\"purple\", \"yellow\"];\n        this.pieChart1 = new Chart('pieChart1', {\n          type: 'pie',\n          data: {\n            labels: labels,\n            datasets: [{\n              data: percentages,\n              backgroundColor: colors\n            }]\n          },\n          options: {\n            title: {\n              display: true,\n              text: 'Claim Types Distribution'\n            },\n            tooltips: {\n              callbacks: {\n                label: function (context) {\n                  const label = context.label;\n                  const value = context.formattedValue;\n                  return `${label}: ${value}%`;\n                },\n                title: function (context) {\n                  return null; // Disable the title (category label) at the top of the tooltip.\n                }\n              }\n            },\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ClaimService), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-body-admin\"]],\n    decls: 29,\n    vars: 8,\n    consts: [[1, \"mt-4\"], [1, \"col-xl-3\", \"col-md-6\"], [1, \"card\", \"text-white\", \"mb-4\", 2, \"background-color\", \"#2C3E50\"], [1, \"card-body\"], [1, \"card-footer\", \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"small\", \"text-white\", \"stretched-link\", 2, \"margin-left\", \"90px\", \"font-size\", \"20px\"], [3, \"series\", \"chart\", \"labels\", \"title\", \"dataLabels\"], [1, \"row\"], [1, \"col-xl-6\", 2, \"width\", \"410px\"], [1, \"card\", \"mb-4\"], [1, \"card-header\"], [1, \"fas\", \"fa-chart-area\", \"me-1\", 2, \"margin-left\", \"40px\"], [\"id\", \"pieChart1\", \"width\", \"100%\", \"height\", \"40\"], [\"style\", \"margin-left: 150px\\n                                ;\", 4, \"ngIf\"], [1, \"col-xl-6\", 2, \"width\", \"420px\"], [1, \"fas\", \"fa-chart-bar\", \"me-1\", 2, \"margin-left\", \"85px\"], [\"id\", \"pieChart\", \"width\", \"100%\", \"height\", \"40\"], [2, \"margin-left\", \"150px\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3);\n        i0.ɵɵtext(5, \"Number of total claims\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(9, \"apx-chart\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10);\n        i0.ɵɵelement(14, \"i\", 11);\n        i0.ɵɵtext(15, \" Pie Chart of % of processed claims \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3);\n        i0.ɵɵelement(17, \"canvas\", 12)(18, \"br\");\n        i0.ɵɵtemplate(19, DashboardComponent_div_19_Template, 3, 1, \"div\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 14)(21, \"div\", 9)(22, \"div\", 10);\n        i0.ɵɵelement(23, \"i\", 15);\n        i0.ɵɵtext(24, \" Pie Chart of type claims \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelement(26, \"canvas\", 16)(27, \"br\");\n        i0.ɵɵtemplate(28, DashboardComponent_div_28_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.nbClaims, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"series\", ctx.chartSeries)(\"chart\", ctx.chartDetails)(\"labels\", ctx.chartLabels)(\"title\", ctx.chartTitle)(\"dataLabels\", ctx.chartDataLabels);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.pieChart1);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.pieChart);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf],\n    styles: [\"\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}