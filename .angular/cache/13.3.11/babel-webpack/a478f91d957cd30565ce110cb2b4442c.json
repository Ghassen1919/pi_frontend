{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet Financialnews2Component = class Financialnews2Component {\n  constructor(claimService, renderer) {\n    this.claimService = claimService;\n    this.renderer = renderer;\n    this.defaultSymbol = \"NASDAQ:AAPL\"; // Set a default symbol\n  }\n\n  ngOnInit() {\n    this.claimService.getTableData3().subscribe(data => {\n      this.tableData = data;\n    });\n    this.claimService.getTableData9().subscribe(data => {\n      this.tableData1 = data;\n    });\n    this.loadTradingViewScript();\n  }\n\n  ngAfterViewInit() {\n    // Load with default symbol\n    this.loadTradingViewWidget(this.defaultSymbol);\n  }\n\n  loadTradingViewWidget(symbol) {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://s3.tradingview.com/tv.js';\n    script.async = true;\n\n    script.onload = () => this.createTradingViewWidget(symbol);\n\n    document.head.appendChild(script);\n  }\n\n  createTradingViewWidget(symbol) {\n    if (!this.tradingViewWidget) {\n      // If the widget doesn't exist, create it\n      this.tradingViewWidget = new window.TradingView.widget({\n        \"autosize\": true,\n        \"symbol\": symbol,\n        \"interval\": \"D\",\n        \"timezone\": \"Etc/UTC\",\n        \"theme\": \"light\",\n        \"style\": \"1\",\n        \"locale\": \"fr\",\n        \"enable_publishing\": true,\n        \"allow_symbol_change\": true,\n        \"container_id\": \"tradingview_c976b\"\n      });\n    } else {\n      // If the widget exists, update the symbol\n      this.tradingViewWidget.chart().setSymbol(symbol);\n    }\n  }\n\n  onSymbolChange(event) {\n    const selectedSymbol = event.target.value; // Remove the existing TradingView widget\n\n    if (this.tradingViewWidget) {\n      this.tradingViewWidget.remove();\n      this.tradingViewWidget = null;\n    } // Load a new TradingView widget with the selected symbol\n\n\n    this.loadTradingViewWidget(selectedSymbol);\n  }\n\n  loadTradingViewScript() {\n    const script = this.renderer.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js';\n    script.async = true; // Add your widget configuration here\n\n    script.text = `\n      {\n        \"exchanges\": [],\n        \"dataSource\": \"SPX500\",\n        \"grouping\": \"sector\",\n        \"blockSize\": \"market_cap_basic\",\n        \"blockColor\": \"change\",\n        \"locale\": \"fr\",\n        \"symbolUrl\": \"\",\n        \"colorTheme\": \"dark\",\n        \"hasTopBar\": false,\n        \"isDataSetEnabled\": false,\n        \"isZoomEnabled\": true,\n        \"hasSymbolTooltip\": true,\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      }\n    `;\n    const container = document.querySelector('.tradingview-widget-container'); // Use the appropriate selector\n\n    this.renderer.appendChild(container, script);\n  }\n\n};\nFinancialnews2Component = __decorate([Component({\n  selector: 'app-financialnews2',\n  templateUrl: './financialnews2.component.html',\n  styleUrls: ['./financialnews2.component.css']\n})], Financialnews2Component);\nexport { Financialnews2Component };","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/GitHub/pi_frontend/src/app/FrontOffice/financialnews2/financialnews2.component.ts"],"names":["__decorate","Component","Financialnews2Component","constructor","claimService","renderer","defaultSymbol","ngOnInit","getTableData3","subscribe","data","tableData","getTableData9","tableData1","loadTradingViewScript","ngAfterViewInit","loadTradingViewWidget","symbol","script","document","createElement","type","src","async","onload","createTradingViewWidget","head","appendChild","tradingViewWidget","window","TradingView","widget","chart","setSymbol","onSymbolChange","event","selectedSymbol","target","value","remove","text","container","querySelector","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet Financialnews2Component = class Financialnews2Component {\r\n    constructor(claimService, renderer) {\r\n        this.claimService = claimService;\r\n        this.renderer = renderer;\r\n        this.defaultSymbol = \"NASDAQ:AAPL\"; // Set a default symbol\r\n    }\r\n    ngOnInit() {\r\n        this.claimService.getTableData3().subscribe(data => {\r\n            this.tableData = data;\r\n        });\r\n        this.claimService.getTableData9().subscribe(data => {\r\n            this.tableData1 = data;\r\n        });\r\n        this.loadTradingViewScript();\r\n    }\r\n    ngAfterViewInit() {\r\n        // Load with default symbol\r\n        this.loadTradingViewWidget(this.defaultSymbol);\r\n    }\r\n    loadTradingViewWidget(symbol) {\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://s3.tradingview.com/tv.js';\r\n        script.async = true;\r\n        script.onload = () => this.createTradingViewWidget(symbol);\r\n        document.head.appendChild(script);\r\n    }\r\n    createTradingViewWidget(symbol) {\r\n        if (!this.tradingViewWidget) {\r\n            // If the widget doesn't exist, create it\r\n            this.tradingViewWidget = new window.TradingView.widget({\r\n                \"autosize\": true,\r\n                \"symbol\": symbol,\r\n                \"interval\": \"D\",\r\n                \"timezone\": \"Etc/UTC\",\r\n                \"theme\": \"light\",\r\n                \"style\": \"1\",\r\n                \"locale\": \"fr\",\r\n                \"enable_publishing\": true,\r\n                \"allow_symbol_change\": true,\r\n                \"container_id\": \"tradingview_c976b\"\r\n            });\r\n        }\r\n        else {\r\n            // If the widget exists, update the symbol\r\n            this.tradingViewWidget.chart().setSymbol(symbol);\r\n        }\r\n    }\r\n    onSymbolChange(event) {\r\n        const selectedSymbol = event.target.value;\r\n        // Remove the existing TradingView widget\r\n        if (this.tradingViewWidget) {\r\n            this.tradingViewWidget.remove();\r\n            this.tradingViewWidget = null;\r\n        }\r\n        // Load a new TradingView widget with the selected symbol\r\n        this.loadTradingViewWidget(selectedSymbol);\r\n    }\r\n    loadTradingViewScript() {\r\n        const script = this.renderer.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js';\r\n        script.async = true;\r\n        // Add your widget configuration here\r\n        script.text = `\r\n      {\r\n        \"exchanges\": [],\r\n        \"dataSource\": \"SPX500\",\r\n        \"grouping\": \"sector\",\r\n        \"blockSize\": \"market_cap_basic\",\r\n        \"blockColor\": \"change\",\r\n        \"locale\": \"fr\",\r\n        \"symbolUrl\": \"\",\r\n        \"colorTheme\": \"dark\",\r\n        \"hasTopBar\": false,\r\n        \"isDataSetEnabled\": false,\r\n        \"isZoomEnabled\": true,\r\n        \"hasSymbolTooltip\": true,\r\n        \"width\": \"100%\",\r\n        \"height\": \"100%\"\r\n      }\r\n    `;\r\n        const container = document.querySelector('.tradingview-widget-container'); // Use the appropriate selector\r\n        this.renderer.appendChild(container, script);\r\n    }\r\n};\r\nFinancialnews2Component = __decorate([\r\n    Component({\r\n        selector: 'app-financialnews2',\r\n        templateUrl: './financialnews2.component.html',\r\n        styleUrls: ['./financialnews2.component.css']\r\n    })\r\n], Financialnews2Component);\r\nexport { Financialnews2Component };\r\n"]},"metadata":{},"sourceType":"module"}