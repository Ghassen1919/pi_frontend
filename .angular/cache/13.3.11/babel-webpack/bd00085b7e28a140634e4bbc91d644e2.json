{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"tradingviewContainer\"];\nexport class PortfolioComponent {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.defaultSymbol = \"OANDA:XAUUSD\";\n    this.selectedSymbol = this.defaultSymbol;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    // Load with default symbol\n    this.loadTradingViewScript();\n  }\n\n  ngOnDestroy() {\n    // Clean up the widget when the component is destroyed\n    if (this.tradingViewWidget) {\n      this.tradingViewWidget.remove();\n    }\n  }\n\n  initializeTradingViewWidget() {\n    // Ensure the TradingView object is loaded\n    if (!window.TradingView) {\n      // You may want to handle this case depending on your requirements\n      console.error(\"TradingView object not available.\");\n      return;\n    }\n\n    this.tradingViewWidget = new window.TradingView.widget({\n      \"interval\": \"1m\",\n      \"width\": 425,\n      \"isTransparent\": false,\n      \"height\": 450,\n      \"symbol\": this.selectedSymbol,\n      \"showIntervalTabs\": true,\n      \"displayMode\": \"single\",\n      \"locale\": \"fr\",\n      \"colorTheme\": \"light\"\n    });\n    this.renderer.appendChild(this.tradingviewContainer.nativeElement, this.tradingViewWidget);\n  }\n\n  loadTradingViewScript() {\n    // Clean up the existing widget\n    if (this.tradingViewWidget) {\n      this.tradingViewWidget.remove();\n    }\n\n    const script = this.renderer.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js';\n    script.async = true;\n\n    script.onload = () => {\n      // Once the script is loaded, initialize the TradingView widget\n      this.initializeTradingViewWidget();\n    };\n\n    this.renderer.appendChild(this.tradingviewContainer.nativeElement, script);\n  }\n\n  onSymbolChange(event) {\n    this.selectedSymbol = event.target.value; // Remove the existing TradingView widget\n\n    if (this.tradingViewWidget) {\n      this.tradingViewWidget.remove();\n      this.tradingViewWidget = null;\n    } // Load a new TradingView widget with the selected symbol\n\n\n    this.loadTradingViewScript();\n  }\n\n}\n\nPortfolioComponent.ɵfac = function PortfolioComponent_Factory(t) {\n  return new (t || PortfolioComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nPortfolioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PortfolioComponent,\n  selectors: [[\"app-portfolio\"]],\n  viewQuery: function PortfolioComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tradingviewContainer = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 0,\n  consts: [[\"for\", \"symbolDropdown\"], [\"id\", \"symbolDropdown\", 3, \"change\"], [\"value\", \"OANDA:XAUUSD\"], [\"value\", \"TVC:USOIL\"], [1, \"tradingview-widget-container\"], [\"tradingviewContainer\", \"\"]],\n  template: function PortfolioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"br\")(1, \"br\");\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n      i0.ɵɵtext(4, \"Select Symbol:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"select\", 1);\n      i0.ɵɵlistener(\"change\", function PortfolioComponent_Template_select_change_5_listener($event) {\n        return ctx.onSymbolChange($event);\n      });\n      i0.ɵɵelementStart(6, \"option\", 2);\n      i0.ɵɵtext(7, \"Gold \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 3);\n      i0.ɵɵtext(9, \"USOIL\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(10, \"div\", 4, 5);\n    }\n  },\n  directives: [i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3J0Zm9saW8uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/GitHub/pi_frontend/src/app/FrontOffice/portfolio/portfolio.component.ts"],"names":["i0","i1","_c0","PortfolioComponent","constructor","renderer","defaultSymbol","selectedSymbol","ngOnInit","ngAfterViewInit","loadTradingViewScript","ngOnDestroy","tradingViewWidget","remove","initializeTradingViewWidget","window","TradingView","console","error","widget","appendChild","tradingviewContainer","nativeElement","script","createElement","type","src","async","onload","onSymbolChange","event","target","value","ɵfac","PortfolioComponent_Factory","t","ɵɵdirectiveInject","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","PortfolioComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","PortfolioComponent_Template","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PortfolioComponent_Template_select_change_5_listener","$event","directives","NgSelectOption","ɵNgSelectMultipleOption","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/forms\";\r\nconst _c0 = [\"tradingviewContainer\"];\r\nexport class PortfolioComponent {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.defaultSymbol = \"OANDA:XAUUSD\";\r\n        this.selectedSymbol = this.defaultSymbol;\r\n    }\r\n    ngOnInit() { }\r\n    ngAfterViewInit() {\r\n        // Load with default symbol\r\n        this.loadTradingViewScript();\r\n    }\r\n    ngOnDestroy() {\r\n        // Clean up the widget when the component is destroyed\r\n        if (this.tradingViewWidget) {\r\n            this.tradingViewWidget.remove();\r\n        }\r\n    }\r\n    initializeTradingViewWidget() {\r\n        // Ensure the TradingView object is loaded\r\n        if (!window.TradingView) {\r\n            // You may want to handle this case depending on your requirements\r\n            console.error(\"TradingView object not available.\");\r\n            return;\r\n        }\r\n        this.tradingViewWidget = new window.TradingView.widget({\r\n            \"interval\": \"1m\",\r\n            \"width\": 425,\r\n            \"isTransparent\": false,\r\n            \"height\": 450,\r\n            \"symbol\": this.selectedSymbol,\r\n            \"showIntervalTabs\": true,\r\n            \"displayMode\": \"single\",\r\n            \"locale\": \"fr\",\r\n            \"colorTheme\": \"light\"\r\n        });\r\n        this.renderer.appendChild(this.tradingviewContainer.nativeElement, this.tradingViewWidget);\r\n    }\r\n    loadTradingViewScript() {\r\n        // Clean up the existing widget\r\n        if (this.tradingViewWidget) {\r\n            this.tradingViewWidget.remove();\r\n        }\r\n        const script = this.renderer.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            // Once the script is loaded, initialize the TradingView widget\r\n            this.initializeTradingViewWidget();\r\n        };\r\n        this.renderer.appendChild(this.tradingviewContainer.nativeElement, script);\r\n    }\r\n    onSymbolChange(event) {\r\n        this.selectedSymbol = event.target.value;\r\n        // Remove the existing TradingView widget\r\n        if (this.tradingViewWidget) {\r\n            this.tradingViewWidget.remove();\r\n            this.tradingViewWidget = null;\r\n        }\r\n        // Load a new TradingView widget with the selected symbol\r\n        this.loadTradingViewScript();\r\n    }\r\n}\r\nPortfolioComponent.ɵfac = function PortfolioComponent_Factory(t) { return new (t || PortfolioComponent)(i0.ɵɵdirectiveInject(i0.Renderer2)); };\r\nPortfolioComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PortfolioComponent, selectors: [[\"app-portfolio\"]], viewQuery: function PortfolioComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tradingviewContainer = _t.first);\r\n    } }, decls: 12, vars: 0, consts: [[\"for\", \"symbolDropdown\"], [\"id\", \"symbolDropdown\", 3, \"change\"], [\"value\", \"OANDA:XAUUSD\"], [\"value\", \"TVC:USOIL\"], [1, \"tradingview-widget-container\"], [\"tradingviewContainer\", \"\"]], template: function PortfolioComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"br\")(1, \"br\");\r\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\r\n        i0.ɵɵtext(4, \"Select Symbol:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(5, \"select\", 1);\r\n        i0.ɵɵlistener(\"change\", function PortfolioComponent_Template_select_change_5_listener($event) { return ctx.onSymbolChange($event); });\r\n        i0.ɵɵelementStart(6, \"option\", 2);\r\n        i0.ɵɵtext(7, \"Gold \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(8, \"option\", 3);\r\n        i0.ɵɵtext(9, \"USOIL\");\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵelement(10, \"div\", 4, 5);\r\n    } }, directives: [i1.NgSelectOption, i1.ɵNgSelectMultipleOption], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3J0Zm9saW8uY29tcG9uZW50LmNzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}